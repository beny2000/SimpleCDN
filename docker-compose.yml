version: '3'

services:

  origin:
    build:
      context: .
      dockerfile: origin/Dockerfile
    environment:
      PORT: ${ORIGIN_PORT}
      BACKUP_PORTS: ${BACKUP1_PORT},${BACKUP2_PORT}
      STORAGE_DIR: "files/"
    ports:
      - "${ORIGIN_PORT}:${ORIGIN_PORT}"

  origin_backup1:
    build:
      context: .
      dockerfile: origin_backup/Dockerfile
    environment:
      PORT: ${BACKUP1_PORT}
      STORAGE_DIR: "files/"
    ports:
      - "${BACKUP1_PORT}:${BACKUP1_PORT}"

  origin_backup2:
    build:
      context: .
      dockerfile: origin_backup/Dockerfile
    environment:
      PORT: ${BACKUP2_PORT}
      STORAGE_DIR: "files/"
    ports:
      - "${BACKUP2_PORT}:${BACKUP2_PORT}"

  load_balancer:
    build:
      context: .
      dockerfile: load_balancer/Dockerfile
    environment:
        PORT: ${BALANCER_PORT}
        NUM_AREAS: 3
        AREA1_PROXIES: ${PROXY1_PORT},${PROXY2_PORT}
        AREA2_PROXIES: ${PROXY3_PORT},${PROXY4_PORT}
        AREA3_PROXIES: ${PROXY5_PORT},${PROXY6_PORT}
        DEFAULT_PATH: "test_file.html"
        FLASK_APP: "server.py"
    ports:
      - "${BALANCER_PORT}:${BALANCER_PORT}"

  proxy1.1:
    build:
      context: .
      dockerfile: proxy/Dockerfile
      args:
        CACHE_DIR: "cache/"
    environment:
        PORT: ${PROXY1_PORT}
        ORIGIN_PORT: ${ORIGIN_PORT}
        FLASK_APP: "server.py"
        CACHE_DIR: "cache/"
        TTL: 120
        BASE_LATENCY: 1
        OUT_SCALE: 1.5
        IN_SCALE: 0.5
        AREA: 1
    ports:
      - "${PROXY1_PORT}:${PROXY1_PORT}"

  proxy1.2:
    build:
      context: .
      dockerfile: proxy/Dockerfile
      args:
        CACHE_DIR: "cache/"
    environment:
        PORT: ${PROXY2_PORT}
        ORIGIN_PORT: ${ORIGIN_PORT}
        FLASK_APP: "server.py"
        CACHE_DIR: "cache/"
        TTL: 120
        BASE_LATENCY: 1
        OUT_SCALE: 1.5
        IN_SCALE: 0.5
        AREA: 1
    ports:
      - "${PROXY2_PORT}:${PROXY2_PORT}"

  proxy2.1:
    build:
      context: .
      dockerfile: proxy/Dockerfile
      args:
        CACHE_DIR: "cache/"
    environment:
        PORT: ${PROXY3_PORT}
        ORIGIN_PORT: ${ORIGIN_PORT}
        FLASK_APP: "server.py"
        CACHE_DIR: "cache/"
        TTL: 120
        BASE_LATENCY: 1
        OUT_SCALE: 1.5
        IN_SCALE: 0.5
        AREA: 2
    ports:
      - "${PROXY3_PORT}:${PROXY3_PORT}"

  proxy2.2:
    build:
      context: .
      dockerfile: proxy/Dockerfile
      args:
        CACHE_DIR: "cache/"
    environment:
        PORT: ${PROXY4_PORT}
        ORIGIN_PORT: ${ORIGIN_PORT}
        FLASK_APP: "server.py"
        CACHE_DIR: "cache/"
        TTL: 120
        BASE_LATENCY: 1
        OUT_SCALE: 1.5
        IN_SCALE: 0.5
        AREA: 2
    ports:
      - "${PROXY4_PORT}:${PROXY4_PORT}"

  proxy3.1:
    build:
      context: .
      dockerfile: proxy/Dockerfile
      args:
        CACHE_DIR: "cache/"
    environment:
        PORT: ${PROXY5_PORT}
        ORIGIN_PORT: ${ORIGIN_PORT}
        FLASK_APP: "server.py"
        CACHE_DIR: "cache/"
        TTL: 120
        BASE_LATENCY: 1
        OUT_SCALE: 1.5
        IN_SCALE: 0.5
        AREA: 3
    ports:
      - "${PROXY5_PORT}:${PROXY5_PORT}"

  proxy3.2:
    build:
      context: .
      dockerfile: proxy/Dockerfile
      args:
        CACHE_DIR: "cache/"
    environment:
        PORT: ${PROXY6_PORT}
        ORIGIN_PORT: ${ORIGIN_PORT}
        FLASK_APP: "server.py"
        CACHE_DIR: "cache/"
        TTL: 120
        BASE_LATENCY: 1
        OUT_SCALE: 1.5
        IN_SCALE: 0.5
        AREA: 3
    ports:
      - "${PROXY6_PORT}:${PROXY6_PORT}"
  
#copy proxy service definition to start more proxy server
